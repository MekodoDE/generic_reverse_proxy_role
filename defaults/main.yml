---
# Path for persistent data
generic_rproxy_base_path: "/opt/rproxy"

# Additional required paths for persistent data
generic_rproxy_additional_path: []

# UID for the docker container
generic_rproxy_uid: 0

# GID for the docker container
generic_rproxy_gid: 0

# Domain of the reverse proxy
generic_rproxy_domain: "{{ ansible_host }}"

# Directory of redirects e.g. "/": "http://example.com/"
generic_rproxy_redirects: {}

# Path to the nginx.conf file
generic_rproxy_conf_path: "{{ generic_rproxy_base_path }}"

# Ports that should be opened in ufw
generic_rproxy_allow_firewall_ports:
  - 80
  - 443

# Container name
generic_rproxy_container_name: "rproxy"

# Container image
generic_rproxy_container_image: "nginx:latest"

# List of exposed ports e.g. "80:80"
generic_rproxy_container_ports:
  - "80:80"
  - "443:443"

# List of attached volumes e.g "/root/data:/container/data"
generic_rproxy_container_volumes:
  - "{{ generic_rproxy_base_path }}:/etc/nginx"

# List of linked containers
generic_rproxy_container_links: []

# Dictionary of additional environment variables
generic_rproxy_container_additional_env: {}

# Container labels
generic_rproxy_container_labels: "sh.acme.autoload.domain={{ generic_rproxy_domain }}"

# Enable auto removal when the container process exits
generic_rproxy_container_auto_remove: no

# Limit for CPU
generic_rproxy_container_cpu_quota: 0

# Limit for memory (RAM)
generic_rproxy_container_memory: 0

# Reservation of memory (RAM)
generic_rproxy_container_memory_reservation: 0

# Total limit for memory (RAM)
generic_rproxy_container_memory_swap: 0

# Network mode of the container e.g. bridge, <container id>, host
generic_rproxy_container_network_mode: "default"

# List of networks the container belongs to
generic_rproxy_container_networks: []

# Force recreation of the container
generic_rproxy_container_recreate: no

# Force restart of the container if already started
generic_rproxy_container_restart: no

# Container restart policy e.g always, no, on-failure, unless-stopped
generic_rproxy_container_restart_policy: "unless-stopped"

# Set the state of the container e.g absent, present, stopped, started
generic_rproxy_container_state: "started"